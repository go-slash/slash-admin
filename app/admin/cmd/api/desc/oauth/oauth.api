syntax = "v1"

info(
    title: "Oauth management"
    desc: "Oauth management is used to support oauth 2.0 for log in from different website"
    author: "waltcow"
    email: "waltcow@gmail.com"
    version: "v1.0"
)

import "base.api"

type (
    // The response data of oauth provider information | 提供者信息
    OauthProviderInfo {
        // ID
        ID uint64 `json:"id"`

        // Provider name | 提供商名字
        Name string `json:"name"`

        // Client ID | 客户端ID
        ClientID string `json:"clientID"`

        // Client secret | 客户端密码
        ClientSecret string `json:"clientSecret"`

        // Redirect URL | 跳转URL
        RedirectURL string `json:"redirectURL"`

        // Scopes | 范围
        Scopes string `json:"scopes"`

        // Auth URL | 鉴权URL
        AuthURL string `json:"authURL"`

        // Token URL | 获取 Token 的网址
        TokenURL string `json:"tokenURL"`

        // Auth Style | 鉴权方式, 0 表示自动检测
        AuthStyle uint8 `json:"authStyle"`

        // Get User information URL | 获取用户信息地址
        InfoURL string `json:"infoURL"`

        // Created time | 创建时间
        CreatedAt int64 `json:"createdAt"`
    }

    // Create provider information request | 创建提供商信息
    CreateProviderReq {

        // Provider name | 提供商名字
        // Required: true
        // Min length: 1
        // Max length: 50
        Name string `json:"name" validate:"min=1,max=50"`

        // Client ID | 客户端ID
        // Required: true
        // Max length: 100
        ClientID string `json:"clientID" validate:"max=100"`

        // Client secret | 客户端密码
        // Require: true
        // Min length: 1
        // Max length: 100
        ClientSecret string `json:"clientSecret" validate:"min=1,max=100"`

        // Redirect URL | 跳转URL
        // Required: true
        // Max length: 200
        RedirectURL string `json:"redirectURL" validate:"max=200"`

        // Scopes | 范围
        // Required: true
        // Max length: 200
        Scopes string `json:"scopes" validate:"max=200"`

        // Auth URL | 鉴权URL
        // Required: true
        // Max length: 200
        AuthURL string `json:"authURL" validate:"max=200"`

        // Token URL | 获取 Token 的网址
        // Required: true
        // Max length: 200
        TokenURL string `json:"tokenURL" validate:"max=200"`

        // Auth Style is specifies how the endpoint wants the client ID & client secret sent. The zero value means to auto-detect. | 鉴权方式, 0 表示自动检测
        // 0 auto detect 1 client ID and client secret 2 username and password
        // Required: true
        // Example: 0
        AuthStyle uint8 `json:"authStyle" validate:"number,oneof=0 1 2"`

        // Get User information URL | 获取用户信息地址
        // Required: true
        // Max length: 200
        InfoURL string `json:"infoURL" validate:"max=200"`
    }

    //Update provider information request | 更新提供商信息
    UpdateProviderReq {
        // ID
        // Required: true
        ID uint64 `json:"id" validate:"number"`

        // Provider name | 提供商名字
        // Required: true
        // Min length: 1
        // Max length: 50
        Name *string `json:"name,optional" validate:"omitempty,min=1,max=50"`

        // Client ID | 客户端ID
        // Required: true
        // Max length: 100
        ClientID *string `json:"clientID,optional" validate:"omitempty,max=100"`

        // Client secret | 客户端密码
        // Require: true
        // Min length: 1
        // Max length: 100
        ClientSecret *string `json:"clientSecret,optional" validate:"omitempty,min=1,max=100"`

        // Redirect URL | 跳转URL
        // Required: true
        // Max length: 200
        RedirectURL *string `json:"redirectURL,optional" validate:"omitempty,max=200"`

        // Scopes | 范围
        // Required: true
        // Max length: 200
        Scopes *string `json:"scopes,optional" validate:"omitempty,max=200"`

        // Auth URL | 鉴权URL
        // Required: true
        // Max length: 200
        AuthURL *string `json:"authURL,optional" validate:"omitempty,max=200"`

        // Token URL | 获取 Token 的网址
        // Required: true
        // Max length: 200
        TokenURL *string `json:"tokenURL,optional" validate:"omitempty,max=200"`

        // Auth Style is specifies how the endpoint wants the client ID & client secret sent. The zero value means to auto-detect. | 鉴权方式, 0 表示自动检测
        // 0 auto detect 1 client ID and client secret 2 username and password
        // Required: true
        // Example: 0
        AuthStyle *uint8 `json:"authStyle,optional" validate:"omitempty,number,oneof=0 1 2"`

        // Get User information URL | 获取用户信息地址
        // Required: true
        // Max length: 200
        InfoURL *string `json:"infoURL,optional" validate:"omitempty,max=200"`
    }


   // The response data of provider list | 提供商列表数据
    ProviderListResp {
        //Page information | 分页信息
        // in: body
        Pagination *Pagination `json:"pagination"`

        // The provider list data | 提供商列表数据
        // in: body
        List []*OauthProviderInfo `json:"list"`
    }

    // Oauth log in request | Oauth 登录请求
    OauthLoginReq {
        // State code to avoid hack | 状态码，请求前后相同避免安全问题
        // Required: true
        // Max Length: 30
        State string `json:"state" validate:"max=30"`

        // Provider name | 提供商名字
        // Required: true
        // Max Length: 40
        // Example: google
        Provider string `json:"provider" validate:"max=40"`
    }

    // Oauth Callback in Req | Oauth 回调请求
    OauthCallbackParamReq {
        // Required: true
        // Max Length: 30
        State string `form:"state" validate:"max=30"`
        // Required: true
        // Max Length: 40
        Code  string `form:"code" validate:"max=100"`
    }

    // Redirect response | 跳转网址
    RedirectResp {
        URL string `json:"URL"`
    }

    // The oauth callback response data | Oauth回调数据
    CallbackResp {
        // User's UUID | 用户的UUID
        UserId string `json:"userId"`

        // User's role information| 用户的角色信息
        // in: body
        Role *RoleMetaInfo `json:"role"`

        // Token for authorization | 验证身份的token
        Token string `json:"token"`

        // Expire timestamp | 过期时间戳
        ExpiredAt uint64 `json:"expiredAt"`
    }
)

@server(
    group: oauth
)
service core {
    // Oauth log in | Oauth 登录
    @handler oauthLogin
    post /oauth/login (OauthLoginReq) returns (RedirectResp)

    // Oauth log in callback route | Oauth 登录回调接口
    @handler oauthCallback
    get /oauth/login/callback(OauthCallbackParamReq) returns (CallbackResp)
}

@server(
    jwt: Auth
    group: oauth
    middleware: Authority
)
service core {
    // Create provider information | 创建提供商信息
    @handler createProvider
    post /oauth/provider (CreateProviderReq) returns (SimpleMsgResp)

    // Update provider information | 更新提供商信息
    @handler updateProvider
    put /oauth/provider (UpdateProviderReq) returns (SimpleMsgResp)

    // Delete provider information | 删除提供商信息
    @handler deleteProvider
    delete /oauth/provider (IDReq) returns (SimpleMsgResp)

    // Get provider list | 获取提供商列表
    @handler getProviderList
    post /oauth/provider/list (PageReq) returns (ProviderListResp)
}