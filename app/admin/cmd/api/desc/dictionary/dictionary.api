syntax = "v1"

info(
    title: "dictionary management"
    desc: "dictionary management is used to register dictionaries and manage dictionaries"
    author: "waltcow"
    email: "waltcow@gmail.com"
    version: "v1.0"
)

import "base.api"

type (
    // The response data of dictionary information | 字典信息
    DictionaryInfo {
        // ID
        ID uint64 `json:"id"`

        // Dictionary title | 字典显示名称
        Title string `json:"title"`

        // Dictionary name | 字典名称
        Name string `json:"name"`

        // Dictionary status | 字典状态
        Status uint8 `json:"status"`

        // Dictionary description | 字典描述
        Description string `json:"description"`

        // Create time | 创建时间
        CreatedAt int64 `json:"createdAt"`
    }

    // Create dictionary information request | 创建或更新字典信息请求
    CreateDictionaryReq {

        // Dictionary title | 字典显示名称
        Title string `json:"title" validate:"min=1,max=50"`

        // Dictionary name | 字典名称
        Name string `json:"name" validate:"min=1,max=50"`

        // Dictionary status | 字典状态
        Status uint8 `json:"status" validator:"number,oneof=0 1"`

        // Dictionary description | 字典描述
        Description string `json:"description" validate:"max=50"`
    }

    // Update dictionary information request | 创建或更新字典信息请求
    UpdateDictionaryReq {
        // ID
        ID uint64 `json:"id" validate:"number"`

        // Dictionary title | 字典显示名称
        Title *string `json:"title,optional" validate:"omitempty,min=1,max=50"`

        // Dictionary name | 字典名称
        Name *string `json:"name,optional" validate:"omitempty,min=1,max=50"`

        // Dictionary status | 字典状态
        Status *uint8 `json:"status,optional" validator:"omitempty,number,oneof=0 1"`

        // Dictionary description | 字典描述
        Description *string `json:"description,optional" validate:"omitempty,max=50"`
    }

    // The response data of dictionary list | 字典列表数据
    DictionaryListResp {
        // PageInfo | 分页信息
        Pagination *Pagination `json:"pagination"`

        // The dictionary list data | 字典列表数据
        List []*DictionaryInfo `json:"list"`
    }

    // Get dictionary list request params | 字典列表请求参数
    DictionaryListReq {
        PageReq

        // Dictionary title | 字典显示名称
        Title *string `json:"title,optional" validate:"omitempty,max=50"`

        // Dictionary name | 字典名称
        Name *string `json:"name,optional" validate:"omitempty,max=50"`
    }

    // The response data of dictionary information | 字典信息
    DictionaryDetailInfo {
        // ID
        ID uint64 `json:"id"`

        // Dictionary title | 字典显示名称
        Title string `json:"title"`

        // Key name | 键
        Key string `json:"key"`

        // Value | 值
        Value string `json:"value"`

        // Status | 状态
        Status uint8 `json:"status"`

        // Create time | 创建时间
        CreatedAt int64 `json:"createdAt"`

        // Update time | 更新时间
        UpdatedAt int64 `json:"updatedAt"`

        // Dictionary ID | 字典ID
        DictionaryID uint64 `json:"dictionaryId"`
    }

    // The response data of dictionary KV list | 字典值的列表数据
    DictionaryDetailListResp {
        // PageInfo | 分页信息
        Pagination *Pagination `json:"pagination"`

        // The dictionary list data | 字典列表数据
        List []*DictionaryDetailInfo `json:"list"`
    }

    // Create KV information request | 创建或更新字典键值信息请求
    CreateDictionaryDetailReq {
        // Detail title | 字典值显示名称
        Title string `json:"title" validate:"min=1,max=50"`

        // Detail key | 键
        Key string `json:"key" validate:"min=1,max=50"`

        // Detail value | 值
        Value string `json:"value"`

        // Status | 状态
        Status uint8 `json:"status" validate:"number,oneof=0 1"`

        // DictionaryID | 所属字典ID
        DictionaryID uint64 `json:"dictionaryId" validate:"number"`
    }

    // Update dictionary KV information request | 创建或更新字典键值信息请求
    UpdateDictionaryDetailReq {
        // ID
        ID uint64 `json:"id" validate:"number"`

        // Detail title | 字典值显示名称
        Title *string `json:"title,optional" validate:"omitempty,min=1,max=50"`

        // Detail key | 键
        Key *string `json:"key,optional" validate:"omitempty,min=1,max=50"`

        // Detail value | 值
        Value *string `json:"value,optional"`

        // Status | 状态
        Status *uint8 `json:"status,optional" validate:"omitempty,number,oneof=0 1"`
    }

    // Get dictionary detail list by dictionary name request | 根据字典名称获取对应键值请求
    DictionaryDetailReq {
        // Dictionary name | 字典名
        Name string `json:"name"`
    }
)

@server(
    jwt: Auth
    group: dictionary
    middleware: Authority
)
service core {
    @doc("Create dictionary information | 创建字典信息")
    @handler createDictionary
    post /dict (CreateDictionaryReq) returns (SimpleMsgResp)

    @doc("Update dictionary information | 更新字典信息")
    @handler updateDictionary
    put /dict (UpdateDictionaryReq) returns (SimpleMsgResp)

    @doc("Delete dictionary information | 删除字典信息")
    @handler deleteDictionary
    delete /dict (IDReq) returns (SimpleMsgResp)

    @doc("Get dictionary list | 获取字典列表")
    @handler getDictionaryList
    post /dict/list (DictionaryListReq) returns (DictionaryListResp)

    @doc("Create dictionary KV information | 创建字典键值信息")
    @handler createDictionaryDetail
    post /dict/detail (CreateDictionaryDetailReq) returns (SimpleMsgResp)

    @doc("Update dictionary KV information | 更新字典键值信息")
    @handler updateDictionaryDetail
    put /dict/detail (UpdateDictionaryDetailReq) returns (SimpleMsgResp)

    @doc("Delete dictionary KV information | 删除字典键值信息")
    @handler deleteDictionaryDetail
    delete /dict/detail (IDReq) returns (SimpleMsgResp)

    @doc("Get dictionary detail list by dictionary name | 根据字典名获取字典键值列表")
    @handler getDetailByDictionaryName
    post /dict/detail/list (DictionaryDetailReq) returns (DictionaryDetailListResp)
}