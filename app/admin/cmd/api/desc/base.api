syntax = "v1"

info(
    title: "base api"
    desc: "base api"
    author: "waltcow"
    email: "waltcow@gmail.com"
    version: "v1.0"
)

// The basic response without data | 基础不带数据信息
type BaseMsgResp {
    Code int32 `json:"code"`
    Msg string `json:"msg"`
    Data string `json:"data"`
}

// The SimpleMsgResp | 简单信息Resp
type SimpleMsgResp {
    // Message | 信息
    Msg string `json:"msg"`
}

// The page request parameters | 列表请求参数
type PageReq {
    // Page number | 第几页
    // Minimum: 1
    PageNo int `json:"pageNo,optional,default=1" validate:"number,min=1"`

    // Page size | 单页数据行数
    // Maximum: 100
    // Default: 10
    PageSize int  `json:"pageSize,optional,default=10," validate:"number,max=100"`
}

// Basic id request | 基础id参数请求
type IDReq {
    // ID
    // Required: true
    ID uint64 `json:"id" validate:"number"`
}

// Page information return ｜ 分页信息返回
type Pagination struct {
    Page  int `json:"page"`
    Limit int `json:"limit"`
    Total int `json:"total"`
}

// Basic id request | 基础id参数请求
type IDPathReq {
    // ID
    // Required: true
    ID uint64 `path:"id"`
}

// Basic UUID request | 基础UUID参数请求
type UUIDReq {
    // UUID
    // Required: true
    // Max length: 36
    UUID string `json:"UUID" validate:"len=36"`
}

// The base response data | 基础信息
type BaseInfo {
    // ID
    ID uint64 `json:"id"`

    // Create date | 创建日期
    CreatedAt int64 `json:"createdAt"`

    // Update date | 更新日期
    UpdatedAt int64 `json:"updatedAt"`

    // Delete date | 删除日期
    DeletedAt int64 `json:"deletedAt"`
}

// The request params of setting boolean status | 设置状态参数
type SetBooleanStatusReq {
    // ID
    // Required: true
    ID uint64 `json:"id" validate:"number"`

    // Status code | 状态码
    // Required: true
    Status uint8 `json:"status" validate:"number"`
}