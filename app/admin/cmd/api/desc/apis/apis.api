syntax = "v1"

info(
    title: "API management"
    desc: "API management is used to register APIs and manage APIs"
    author: "waltcow"
    email: "waltcow@gmail.com"
    version: "v1.0"
)

import "base.api"

type (
    // The response data of API information | API信息
    ApiInfo {
        // ID
        ID uint64 `json:"id"`

        // API path | API路径
        Path string `json:"path"`

        // API Description | API 描述
        Description string `json:"description"`

        // API group | API分组
        Group string `json:"group"`

        // API request method e.g. POST | API请求类型 如POST
        Method string `json:"method"`

        // created time | 创建时间
        CreatedAt int64 `json:"createdAt"`
    }

    // Create API information request | 创建或更新API信息
    CreateApiReq {
        // API path | API路径
        // Required: true
        // Min length: 1
        // Max length: 50
        Path string `json:"path" validate:"min=1,max=50"`

        // API Description | API 描述
        // Required: true
        // Max length: 50
        Description string `json:"description" validate:"max=50"`

        // API group | API分组
        // Require: true
        // Min length: 1
        // Max length: 10
        Group string `json:"group" validate:"alphanum,min=1,max=10"`

        // API request method e.g. POST | API请求类型 如POST
        // Required: true
        // Example: POST
        // Min length: 3
        // Max length: 4
        Method string `json:"method" validate:"uppercase,min=3,max=4"`
    }

    // Update API information request | 创建或更新API信息
    UpdateApiReq {
        // ID
        // Required: true
        ID uint64 `json:"id" validate:"number"`

        // API path | API路径
        // Min length: 1
        // Max length: 50
        Path *string `json:"path,optional" validate:"omitempty,min=1,max=50"`

        // API Description | API 描述
        // Max length: 50
        Description *string `json:"description,optional" validate:"omitempty,max=50"`

        // API group | API分组
        // Min length: 1
        // Max length: 10
        Group *string `json:"group,optional" validate:"omitempty,alphanum,min=1,max=10"`

        // API request method e.g. POST | API请求类型 如POST
        // Min length: 3
        // Max length: 4
        Method *string `json:"method,optional" validate:"omitempty,uppercase,min=3,max=4"`
    }

     // The response data of API list | API列表数据
    ApiListResp {
        // Page information | 分页信息
        // in: body
        Pagination *Pagination `json:"pagination"`

        // The API list data | API列表数据
        // in: body
        List []*ApiInfo `json:"data"`
    }

    // Get API list request params | API列表请求参数
    ApiListReq {
        PageReq
        // API path | API路径
        // Max length: 100
        Path *string `json:"path,optional" validate:"omitempty,max=100"`

        // API Description | API 描述
        // Max length: 50
        Description *string `json:"description,optional" validate:"omitempty,max=50"`

        // API group | API分组
        // Max length: 10
        Group *string `json:"group,optional" validate:"omitempty,alphanum,max=10"`

        // API request method e.g. POST | API请求类型 如POST
        // Max length: 4
        Method *string `json:"method,optional" validate:"omitempty,uppercase,max=4"`
    }
)

@server(
    jwt: Auth
    group: api
    middleware: Authority
)
service core {

    @doc(
        description: "Create API information | 创建或更新API"
        summary: "创建API"
    )
    @handler createApi
    post /api (CreateApiReq) returns (SimpleMsgResp)

    @doc(
        description: "Update API information | 创建或更新API"
        summary: "更新API"
    )
    @handler updateApi
    put /api (UpdateApiReq) returns (SimpleMsgResp)

    @doc(
        description: "Delete API information | 删除API信息"
        summary: "删除API信息"
    )
    @handler deleteApi
    delete /api (IDReq) returns (SimpleMsgResp)

    @doc(
        description: "Get API list | 获取API列表"
        summary: "获取API列表"
    )
    @handler getApiList
    post /api/list (ApiListReq) returns (ApiListResp)
}