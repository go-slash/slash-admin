// Code generated by ent, DO NOT EDIT.

package ent

func (sac *SysApiCreate) Copy(input *CreateSysApiInput) *SysApiCreate {
	if input.ID != nil {
		sac.SetID(*input.ID)
	}

	if input.Path != nil {
		sac.SetPath(*input.Path)
	}

	if input.Description != nil {
		sac.SetDescription(*input.Description)
	}

	if input.APIGroup != nil {
		sac.SetAPIGroup(*input.APIGroup)
	}

	if input.Method != nil {
		sac.SetMethod(*input.Method)
	}

	if input.CreatedAt != nil {
		sac.SetCreatedAt(*input.CreatedAt)
	}

	if input.UpdatedAt != nil {
		sac.SetUpdatedAt(*input.UpdatedAt)
	}

	if input.DeletedAt != nil {
		sac.SetDeletedAt(*input.DeletedAt)
	}
	return sac
}

func (sdc *SysDictionaryCreate) Copy(input *CreateSysDictionaryInput) *SysDictionaryCreate {
	if input.ID != nil {
		sdc.SetID(*input.ID)
	}

	if input.Title != nil {
		sdc.SetTitle(*input.Title)
	}

	if input.Name != nil {
		sdc.SetName(*input.Name)
	}

	if input.Status != nil {
		sdc.SetStatus(*input.Status)
	}

	if input.Desc != nil {
		sdc.SetDesc(*input.Desc)
	}

	if input.CreatedAt != nil {
		sdc.SetCreatedAt(*input.CreatedAt)
	}

	if input.UpdatedAt != nil {
		sdc.SetUpdatedAt(*input.UpdatedAt)
	}

	if input.DeletedAt != nil {
		sdc.SetDeletedAt(*input.DeletedAt)
	}
	return sdc
}

func (sddc *SysDictionaryDetailCreate) Copy(input *CreateSysDictionaryDetailInput) *SysDictionaryDetailCreate {
	if input.ID != nil {
		sddc.SetID(*input.ID)
	}

	if input.Title != nil {
		sddc.SetTitle(*input.Title)
	}

	if input.Key != nil {
		sddc.SetKey(*input.Key)
	}

	if input.Value != nil {
		sddc.SetValue(*input.Value)
	}

	if input.Status != nil {
		sddc.SetStatus(*input.Status)
	}

	if input.Remark != nil {
		sddc.SetRemark(*input.Remark)
	}

	if input.OrderNo != nil {
		sddc.SetOrderNo(*input.OrderNo)
	}

	if input.CreatedAt != nil {
		sddc.SetCreatedAt(*input.CreatedAt)
	}

	if input.UpdatedAt != nil {
		sddc.SetUpdatedAt(*input.UpdatedAt)
	}

	if input.DeletedAt != nil {
		sddc.SetDeletedAt(*input.DeletedAt)
	}
	return sddc
}

func (smc *SysMenuCreate) Copy(input *CreateSysMenuInput) *SysMenuCreate {
	if input.ID != nil {
		smc.SetID(*input.ID)
	}

	if input.MenuLevel != nil {
		smc.SetMenuLevel(*input.MenuLevel)
	}

	if input.MenuType != nil {
		smc.SetMenuType(*input.MenuType)
	}

	if input.ParentID != nil {
		smc.SetParentID(*input.ParentID)
	}

	if input.Path != nil {
		smc.SetPath(*input.Path)
	}

	if input.Name != nil {
		smc.SetName(*input.Name)
	}

	if input.Redirect != nil {
		smc.SetRedirect(*input.Redirect)
	}

	if input.Component != nil {
		smc.SetComponent(*input.Component)
	}

	if input.OrderNo != nil {
		smc.SetOrderNo(*input.OrderNo)
	}

	if input.Disabled != nil {
		smc.SetDisabled(*input.Disabled)
	}

	if input.Meta != nil {
		smc.SetMeta(*input.Meta)
	}

	if input.CreatedAt != nil {
		smc.SetCreatedAt(*input.CreatedAt)
	}

	if input.UpdatedAt != nil {
		smc.SetUpdatedAt(*input.UpdatedAt)
	}

	if input.DeletedAt != nil {
		smc.SetDeletedAt(*input.DeletedAt)
	}
	return smc
}

func (smpc *SysMenuParamCreate) Copy(input *CreateSysMenuParamInput) *SysMenuParamCreate {
	if input.ID != nil {
		smpc.SetID(*input.ID)
	}

	if input.MenuID != nil {
		smpc.SetMenuID(*input.MenuID)
	}

	if input.Type != nil {
		smpc.SetType(*input.Type)
	}

	if input.Key != nil {
		smpc.SetKey(*input.Key)
	}

	if input.Value != nil {
		smpc.SetValue(*input.Value)
	}

	if input.CreatedAt != nil {
		smpc.SetCreatedAt(*input.CreatedAt)
	}

	if input.UpdatedAt != nil {
		smpc.SetUpdatedAt(*input.UpdatedAt)
	}

	if input.DeletedAt != nil {
		smpc.SetDeletedAt(*input.DeletedAt)
	}
	return smpc
}

func (sopc *SysOauthProviderCreate) Copy(input *CreateSysOauthProviderInput) *SysOauthProviderCreate {
	if input.ID != nil {
		sopc.SetID(*input.ID)
	}

	if input.Name != nil {
		sopc.SetName(*input.Name)
	}

	if input.ClientID != nil {
		sopc.SetClientID(*input.ClientID)
	}

	if input.ClientSecret != nil {
		sopc.SetClientSecret(*input.ClientSecret)
	}

	if input.RedirectURL != nil {
		sopc.SetRedirectURL(*input.RedirectURL)
	}

	if input.Scopes != nil {
		sopc.SetScopes(*input.Scopes)
	}

	if input.AuthURL != nil {
		sopc.SetAuthURL(*input.AuthURL)
	}

	if input.TokenURL != nil {
		sopc.SetTokenURL(*input.TokenURL)
	}

	if input.AuthStyle != nil {
		sopc.SetAuthStyle(*input.AuthStyle)
	}

	if input.InfoURL != nil {
		sopc.SetInfoURL(*input.InfoURL)
	}

	if input.CreatedAt != nil {
		sopc.SetCreatedAt(*input.CreatedAt)
	}

	if input.UpdatedAt != nil {
		sopc.SetUpdatedAt(*input.UpdatedAt)
	}

	if input.DeletedAt != nil {
		sopc.SetDeletedAt(*input.DeletedAt)
	}
	return sopc
}

func (src *SysRoleCreate) Copy(input *CreateSysRoleInput) *SysRoleCreate {
	if input.ID != nil {
		src.SetID(*input.ID)
	}

	if input.Name != nil {
		src.SetName(*input.Name)
	}

	if input.Value != nil {
		src.SetValue(*input.Value)
	}

	if input.DefaultRouter != nil {
		src.SetDefaultRouter(*input.DefaultRouter)
	}

	if input.Status != nil {
		src.SetStatus(*input.Status)
	}

	if input.Remark != nil {
		src.SetRemark(*input.Remark)
	}

	if input.OrderNo != nil {
		src.SetOrderNo(*input.OrderNo)
	}

	if input.CreatedAt != nil {
		src.SetCreatedAt(*input.CreatedAt)
	}

	if input.UpdatedAt != nil {
		src.SetUpdatedAt(*input.UpdatedAt)
	}

	if input.DeletedAt != nil {
		src.SetDeletedAt(*input.DeletedAt)
	}
	return src
}

func (stc *SysTokenCreate) Copy(input *CreateSysTokenInput) *SysTokenCreate {
	if input.ID != nil {
		stc.SetID(*input.ID)
	}

	if input.UUID != nil {
		stc.SetUUID(*input.UUID)
	}

	if input.Token != nil {
		stc.SetToken(*input.Token)
	}

	if input.Source != nil {
		stc.SetSource(*input.Source)
	}

	if input.Status != nil {
		stc.SetStatus(*input.Status)
	}

	if input.ExpiredAt != nil {
		stc.SetExpiredAt(*input.ExpiredAt)
	}

	if input.CreatedAt != nil {
		stc.SetCreatedAt(*input.CreatedAt)
	}

	if input.UpdatedAt != nil {
		stc.SetUpdatedAt(*input.UpdatedAt)
	}

	if input.DeletedAt != nil {
		stc.SetDeletedAt(*input.DeletedAt)
	}
	return stc
}

func (suc *SysUserCreate) Copy(input *CreateSysUserInput) *SysUserCreate {
	if input.ID != nil {
		suc.SetID(*input.ID)
	}

	if input.UUID != nil {
		suc.SetUUID(*input.UUID)
	}

	if input.Username != nil {
		suc.SetUsername(*input.Username)
	}

	if input.Password != nil {
		suc.SetPassword(*input.Password)
	}

	if input.Nickname != nil {
		suc.SetNickname(*input.Nickname)
	}

	if input.SideMode != nil {
		suc.SetSideMode(*input.SideMode)
	}

	if input.Avatar != nil {
		suc.SetAvatar(*input.Avatar)
	}

	if input.BaseColor != nil {
		suc.SetBaseColor(*input.BaseColor)
	}

	if input.ActiveColor != nil {
		suc.SetActiveColor(*input.ActiveColor)
	}

	if input.RoleID != nil {
		suc.SetRoleID(*input.RoleID)
	}

	if input.Mobile != nil {
		suc.SetMobile(*input.Mobile)
	}

	if input.Email != nil {
		suc.SetEmail(*input.Email)
	}

	if input.Status != nil {
		suc.SetStatus(*input.Status)
	}

	if input.CreatedAt != nil {
		suc.SetCreatedAt(*input.CreatedAt)
	}

	if input.UpdatedAt != nil {
		suc.SetUpdatedAt(*input.UpdatedAt)
	}

	if input.DeletedAt != nil {
		suc.SetDeletedAt(*input.DeletedAt)
	}
	return suc
}
